
{{- if .Values.global.PERSISTENT_VOLUME.enabled }}
{{- if .Values.postgres_backup.enabled }}
{{ if semverCompare ">=1.21-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: batch/v1
{{ else -}}
apiVersion: batch/v1beta1
{{ end -}}
kind: CronJob
metadata:
    name: postgres-app-backup-cronjob
    namespace: devtroncd
spec:
    schedule: {{ .Values.global.schedule }}
    jobTemplate:
      spec:
        template:
          spec:
            containers:
            - name: postgres-app-backup-cronjob
              image: {{ .Values.postgres_backup.postgresImage | default "postgres:12" }}
              volumeMounts:
              - mountPath: /postgres
                name: psql-volume
              env:
              - name: PGPASSWORD
                valueFrom:
                  secretKeyRef:
                    key: PG_PASSWORD
                    name: {{ .Values.postgres_backup.secretName }}
              imagePullPolicy: Always
              args:
              - /bin/bash
              - -c  
              {{- if $.Values.global.PERSISTENT_VOLUME.encryption.enabled }}   
              - mkdir -p $PWD/postgres/ ; date1=$(date +%Y%m%d-%H%M); pg_dumpall -h postgresql-postgresql.devtroncd -p 5432 -U postgres --no-privileges >  $PWD/postgres/backup-$date1.tar ; gpg -c --batch --passphrase {{ .Values.global.PERSISTENT_VOLUME.encryption.passphrase }} $PWD/postgres/backup-$date1.tar ; rm -rvf $PWD/postgres/backup-$date1.tar; 
              {{- else }}
              - mkdir -p $PWD/postgres/ ; date1=$(date +%Y%m%d-%H%M); pg_dumpall -h {{ .Values.postgres_backup.host | default "postgresql-postgresql.devtroncd" }} --exclude-database=clairv4 -p 5432 -U postgres --no-privileges >  $PWD/postgres/backup-$date1.tar ;
              {{- end }}
            volumes:
            - name: psql-volume
              persistentVolumeClaim:
                {{- if and .Values.global.PERSISTENT_VOLUME.enabled .Values.global.PERSISTENT_VOLUME.PERSISTENT_VOLUME_CLAIM_NAME }}
                  claimName: {{ .Values.global.PERSISTENT_VOLUME.PERSISTENT_VOLUME_CLAIM_NAME }}
                {{- else }}
                  claimName: {{ .Values.global.PERSISTENT_VOLUME.PVC_CREATION.name }}
                {{- end }}
            restartPolicy: OnFailure
{{- end }}
{{- if and (.Values.global.PERSISTENT_VOLUME.enabled) (not .Values.global.PERSISTENT_VOLUME.PERSISTENT_VOLUME_CLAIM_NAME) (.Values.global.PERSISTENT_VOLUME.PVC_CREATION.enabled) }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.global.PERSISTENT_VOLUME.PVC_CREATION.name }}
  namespace: devtroncd
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
       storage: {{ .Values.global.PERSISTENT_VOLUME.PVC_CREATION.size }}
{{- end }}
{{- if .Values.argocd_backup.enabled }}
---
{{ if semverCompare ">=1.21-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: batch/v1
{{ else -}}
apiVersion: batch/v1beta1
{{ end -}}
kind: CronJob
metadata:
    name: argocd-app-backup-job
    namespace: devtroncd
spec:
    schedule: "7 12 * * *"
    jobTemplate:
      spec:
        template:
          spec:
            containers:
            - name: argocd-app-backup-job
              image: {{ .Values.argocd_backup.argocdImage | default "quay.io/argoproj/argocd:v2.4.0" }}
              volumeMounts:
              - mountPath: /cache
                name: argocd-volume
              env:
              imagePullPolicy: Always
              args:
              - /bin/bash
              - -c
              {{- if $.Values.global.PERSISTENT_VOLUME.encryption.enabled }}   
              - mkdir -p $PWD/argo-cd/ ; date1=$(date +%Y%m%d-%H%M);  {{ .Values.argocd_backup.args | default "argocd admin export -n devtroncd" }} >  $PWD/argo-cd/backup-$date1.tar ; gpg -c --batch --passphrase  {{ .Values.global.PERSISTENT_VOLUME.encryption.passphrase }} $PWD/argo-cd/backup-$date1.tar; rm -rvf $PWD/argo-cd/backup-$date1.tar;
              {{- else }}
              - mkdir -p $PWD/argo-cd/ ; date1=$(date +%Y%m%d-%H%M); {{ .Values.argocd_backup.args | default "argocd admin export -n devtroncd" }} >  $PWD/argo-cd/backup-$date1.tar ;
              {{- end }}
            volumes:
            - name: argocd-volume
              persistentVolumeClaim:
                {{- if and .Values.global.PERSISTENT_VOLUME.enabled .Values.global.PERSISTENT_VOLUME.PERSISTENT_VOLUME_CLAIM_NAME }}
                  claimName: {{ .Values.global.PERSISTENT_VOLUME.PERSISTENT_VOLUME_CLAIM_NAME }}
                {{- else }}
                  claimName: {{ .Values.global.PERSISTENT_VOLUME.PVC_CREATION.name }}
                {{- end }}
            restartPolicy: OnFailure
            serviceAccountName: argocd-backup
{{- end }}
{{- end }}
